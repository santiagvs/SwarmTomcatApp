name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-test-deploy:
    name: Build, Test, and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build Project
        run: |
          mvn clean package -DskipTests

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker Images
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          load: true
          tags: form-app:latest
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Integration Tests
        run: |
          docker compose up -d
          docker compose exec form-app curl -f http://localhost:8080 || exit 1
          docker compose down

      - name: Docker Metadata
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/form-app
          tags: |
            latest
            ${{ github.sha }}

      - name: Build and Push Docker Images
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

      - name: Deploy to Docker Swarm
        run: |
          ssh -o StrictHostKeyChecking=no user@your-swarm-manager "
            docker service update --image ${{ secrets.DOCKERHUB_USERNAME }}/form-app:latest form-stack_form-app ||
            docker stack deploy -c docker-compose.yml form-stack
          "
        env:
          DOCKER_HOST: ssh://user@your-swarm-manager

